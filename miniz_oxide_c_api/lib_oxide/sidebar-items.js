initSidebarItems({"enum":[["mz_internal_state","Unused opaque pointer."]],"fn":[["def_alloc_func","Default allocation function using `malloc`."],["def_free_func","Default free function using `free`."],["mz_compress2_oxide",""],["mz_deflate_end_oxide","Free the inner compression state."],["mz_deflate_init2_oxide","Initialize the compressor with the requested parameters."],["mz_deflate_init_oxide","Initialize the wrapped compressor with the requested level (0-10) and default settings."],["mz_deflate_oxide",""],["mz_deflate_reset_oxide","Reset the compressor, so it can be used to compress a new set of data."],["mz_inflate_end_oxide",""],["mz_inflate_init2_oxide",""],["mz_inflate_init_oxide",""],["mz_inflate_oxide",""],["mz_uncompress2_oxide",""]],"mod":[["return_status",""]],"struct":[["StreamOxide",""],["inflate_state",""],["mz_stream","Inner stream state containing pointers to the used buffers and internal state."]],"trait":[["StateType","Trait used for states that can be carried by BoxedState."]],"type":[["MZResult",""],["mz_alloc_func","Signature of function used to allocate the compressor/decompressor structs."],["mz_free_func","Signature of function used to free the compressor/decompressor structs."]]});